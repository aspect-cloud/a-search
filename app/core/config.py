import logging
from dataclasses import dataclass, field
from os import getenv
from typing import List, Optional, Dict

from dotenv import load_dotenv
from google import genai
from google.genai import types as genai_types

from app.services.api_key_manager import ApiKeyManager

load_dotenv()


# --- Component Dataclasses ---

@dataclass
class TextMessages:
    """Container for all user-facing text messages for easy customization."""
    # --- General ---
    start_message: str = ("""
    üëã –ü—Ä–∏–≤–µ—Ç, <b>{user_name}!</b>

–Ø ‚Äî —Ç–≤–æ–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ <b>A-Search</b>. –í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –¥–ª—è –Ω–∞—á–∞–ª–∞:

üöÄ <b>–ë—ã—Å—Ç—Ä—ã–π</b>: –û–¥–∏–Ω –∞–≥–µ–Ω—Ç ‚Äî –±—ã—Å—Ç—Ä–æ, –ø–æ –¥–µ–ª—É.
üß† <b>–í–¥—É–º—á–∏–≤—ã–π</b>: –¢—Ä–∏ –∞–≥–µ–Ω—Ç–∞ ‚Äî —Å —É–º–æ–º, –≤–≥–ª—É–±—å.
ü§ñ <b>–ê–≥–µ–Ω—Ç</b>: –î–µ—Å—è—Ç—å –∞–≥–µ–Ω—Ç–æ–≤ ‚Äî –º–æ—â–Ω—ã–π –∫–æ–Ω—Å–∏–ª–∏—É–º –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á.

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ
""")
    help_message: str = ("""
–Ø ‚Äî –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç A-Search. –í–æ—Ç, —á—Ç–æ —è —É–º–µ—é:

üîç <b>–¢–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫</b>: –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å ‚Äî —è –Ω–∞–π–¥—É –æ—Ç–≤–µ—Ç.
üñºÔ∏è <b>–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</b>: –ø—Ä–∏—à–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –∑–∞–¥–∞—á—É ‚Äî —Ä–∞–∑–±–µ—Ä—É—Å—å.
üó£Ô∏è <b>–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏</b>: –ø–æ–º–Ω—é, –æ —á—ë–º –º—ã –≥–æ–≤–æ—Ä–∏–ª–∏ ‚Äî –º–æ–∂–Ω–æ —É—Ç–æ—á–Ω—è—Ç—å.
üåê <b>–í–µ–±-–ø–æ–∏—Å–∫</b>: –≤–æ –≤—Å–µ—Ö —Ä–µ–∂–∏–º–∞—Ö –∏—â—É –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ—É –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
/clear ‚Äî —Å–±—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞.
/help ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

<b>–†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã:</b>
üöÄ <b>–ë—ã—Å—Ç—Ä—ã–π</b>: –º–∏–Ω–∏–º—É–º —Ä–∞–∑–¥—É–º–∏–π ‚Äî –º–∞–∫—Å–∏–º—É–º —Å–∫–æ—Ä–æ—Å—Ç–∏.
üß† <b>–í–¥—É–º—á–∏–≤—ã–π</b>: –≤–¥—É–º—á–∏–≤—ã–π –æ—Ç–≤–µ—Ç —Å —Ä–∞–∑–±–æ—Ä–æ–º –æ—Ç 3 –∞–≥–µ–Ω—Ç–æ–≤.
ü§ñ <b>–ê–≥–µ–Ω—Ç</b>: –ø–æ–¥–∫–ª—é—á–∞—é —Å—Ä–∞–∑—É 10 –∞–≥–µ–Ω—Ç–æ–≤ ‚Äî –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑.

<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b>
–í –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã—Ö —Ä–µ–∂–∏–º–∞—Ö –º–æ–∏ –æ—Ç–≤–µ—Ç—ã –º–æ–≥—É—Ç –∑–∞–Ω–∏–º–∞—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ ‚Äî —è –∏—Å–ø–æ–ª—å–∑—É—é RAG (Retrieval Augmented Generation).
–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —è –ø–æ–¥–º–µ—à–∏–≤–∞—é –∞–≥–µ–Ω—Ç–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø–æ–∏—Å–∫–∞, —á—Ç–æ–±—ã –¥–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî –∏ —Å–Ω–∏–∑–∏—Ç—å —Ä–∏—Å–∫ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π.
<a href="https://github.com/aspect-cloud/a-search">Open-Source</a>.

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å
""")
    mode_selection: str = "–Ø –ø–µ—Ä–µ–∫–ª—é—á–∏–ª—Å—è –≤ —Ä–µ–∂–∏–º <b>{mode}</b>. –°–ø—Ä–∞—à–∏–≤–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ!"
    history_cleared: str = "üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞."
    thinking: str = "‚è≥ –î—É–º–∞—é..."

    # --- Errors & Warnings ---
    error_message: str = "üö® <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b> üö®\n\n–Ø —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–≤–æ–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
    all_keys_failed: str = "–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ API-–∫–ª—é—á–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç. –ü—Ä–∏–¥–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å."
    blocked_response: str = "‚ö†Ô∏è –ú–æ–π –æ—Ç–≤–µ—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–∑-–∑–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å."
    empty_response: str = "‚ö†Ô∏è –Ø –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
    select_mode_first: str = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã."
    empty_request: str = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å."

    # --- Media Handling ---
    photo_no_caption: str = "[–±–µ–∑ –ø–æ–¥–ø–∏—Å–∏]"
    media_processing: str = "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–≤–æ–π —Ñ–∞–π–ª..."
    uploading_to_google: str = "‚òÅÔ∏è –ó–∞–≥—Ä—É–∂–∞—é —Ñ–∞–π–ª –≤ Google —á–µ—Ä–µ–∑ File API..."
    media_error: str = "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–≤–æ–π —Ñ–∞–π–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞."
    media_unsupported_type: str = "‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ñ–∞–π–ª—ã —ç—Ç–æ–≥–æ —Ç–∏–ø–∞. –Ø –º–æ–≥—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."
    unsupported_content_type: str = "‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–æ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è. –Ø –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏."
    media_file_download_error: str = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è."

    # --- RAG & Agent Mode ---
    no_expert_opinions: str = "–≠–∫—Å–ø–µ—Ä—Ç—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –º–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å."
    used_ddg_queries: str = '<pre><b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã DuckDuckGo:</b></pre>\n- <code>{queries}</code>'
    input_placeholder: str = "–°–ø—Ä–æ—Å–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å..."


@dataclass
class ButtonLabels:
    """Container for all button labels."""
    fast: str = "üöÄ –ë—ã—Å—Ç—Ä—ã–π"
    reasoning: str = "üß† –í–¥—É–º—á–∏–≤—ã–π"
    agent: str = "ü§ñ –ê–≥–µ–Ω—Ç"
    help: str = "‚ùì –ü–æ–º–æ—â—å"
    clear_history: str = "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"
    back_to_main: str = "‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"


@dataclass
class Statuses:
    """Container for status messages shown to the user during processing."""
    fast: str
    reasoning_experts: str
    reasoning_synthesizer: str
    agent_experts: str
    agent_synthesizer: str
    rag_expert_search: str

    def get_by_mode(self, mode: str, stage: str, expert_num: Optional[int] = None) -> str:
        """Returns the status message for the given mode and stage."""
        attr_name = f"{mode}_{stage}"
        base_status = getattr(self, attr_name, "")
        if stage == 'experts' and expert_num is not None:
            if mode == 'reasoning':
                return f"üß† –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Å—å —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–º #{expert_num}..."
            elif mode == 'agent':
                return f"ü§ñ –°–æ–≤–µ—â–∞—é—Å—å —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º #{expert_num}..."
        return base_status


@dataclass
class Prompts:
    """Container for system prompts for different modes."""
    fast: str
    synthesizer_reasoning: str
    synthesizer_agent: str
    experts_reasoning: List[str]
    experts_agent: List[str]

    def get_experts_by_mode(self, mode: str) -> List[str]:
        """Returns the list of expert prompts for the given mode."""
        if mode == 'reasoning':
            return self.experts_reasoning
        elif mode == 'agent':
            return self.experts_agent
        return []

    def get_synthesizer_by_mode(self, mode: str) -> Optional[str]:
        """Returns the synthesizer prompt for the given mode."""
        attr_name = f"synthesizer_{mode}"
        return getattr(self, attr_name, None)





# --- Main Settings Class ---

@dataclass
class Settings:
    """Main container for all application settings."""
    available_modes: List[str] = field(default_factory=lambda: ["üöÄ –ë—ã—Å—Ç—Ä—ã–π", "üß† –í–¥—É–º—á–∏–≤—ã–π", "ü§ñ –ê–≥–µ–Ω—Ç"])
    # --- Core settings ---
    bot_token: str = getenv("BOT_TOKEN")
    webhook_url: str = getenv("WEBHOOK_URL")
    admin_id: int = int(getenv("ADMIN_ID", 0))
    LIFECYCLE_EVENT_QUEUE_ID: Optional[str] = getenv("LIFECYCLE_EVENT_QUEUE_ID")
    LIFECYCLE_EVENT_OBJECT_ID: Optional[str] = getenv("LIFECYCLE_EVENT_OBJECT_ID")

    # --- Component Instances ---
    texts: TextMessages = field(default_factory=TextMessages, init=False)
    buttons: ButtonLabels = field(default_factory=ButtonLabels, init=False)
    statuses: Statuses = field(init=False)
    prompts: Prompts = field(init=False)
    generation_config: genai_types.GenerateContentConfig = field(init=False)
    api_key_manager: ApiKeyManager = field(init=False)
    gemini_model_config: Dict[str, str] = field(init=False)

    # --- Features ---
    enable_history: bool = True
    enable_file_support: bool = True
    max_history_length: int = 10
    max_file_uploads: int = 20
    max_url_uploads: int = 20

    # --- Models & API ---
    gemini_flash_model: str = "gemini-2.5-flash"
    gemini_pro_model: str = "gemini-2.5-flash"
    gemini_api_keys: List[str] = field(default_factory=list, init=False)

    # --- Search --- (Modes where internal search is enabled)
    internal_search_enabled_modes: List[str] = field(default_factory=list, init=False)
    rag_fact_check_experts: List[str] = field(default_factory=list, init=False)

    # --- Prompt Texts ---
    fast_prompt: str = ("""–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π, —Ç–æ—á–Ω—ã–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç. **–ü—Ä–∞–≤–∏–ª–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**: –ò—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** —Å–ª–µ–¥—É—é—â–∏–µ HTML-—Ç–µ–≥–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Telegram: `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Ç–µ–≥–∏ –∏–ª–∏ Markdown. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤—Å–µ —Ç–µ–≥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –û–±—â–∞–π—Å—è –Ω–∞ —Ç—ã.""")

    synthesizer_reasoning_prompt: str = ("""–¢—ã ‚Äî A-Search, –≥–ª–∞–≤–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–Ω–µ–Ω–∏—è —Ç—Ä–µ—Ö —Ä–∞–∑–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –æ—Ç–≤–µ—Ç—ã –≤ –æ–¥–∏–Ω, —Ü–µ–ª–æ—Å—Ç–Ω—ã–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.

1.  **–ò–ó–£–ß–ò –ú–ù–ï–ù–ò–Ø**: –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π –≤—Å–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –º–Ω–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.
2.  **–ù–ê–ô–î–ò –û–ë–©–ï–ï –ò –†–ê–ó–õ–ò–ß–ò–Ø**: –û–ø—Ä–µ–¥–µ–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Ç–æ—á–∫–∏ —Å–æ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏—è –∏ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤–æ –≤–∑–≥–ª—è–¥–∞—Ö.
3.  **–°–¢–†–£–ö–¢–£–†–ò–†–£–ô**: –°–≥—Ä—É–ø–ø–∏—Ä—É–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–æ —Ç–µ–º–∞–º. –ù–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª—è–π, –∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–π.
4.  **–°–î–ï–õ–ê–ô –í–´–í–û–î**: –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –≤–∑–≤–µ—à–µ–Ω–Ω—ã–π –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ, –∞ –Ω–µ –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ –º–Ω–µ–Ω–∏–π.
5.  **–û–§–û–†–ú–õ–ï–ù–ò–ï**: –ò—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** —Å–ª–µ–¥—É—é—â–∏–µ HTML-—Ç–µ–≥–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Telegram: `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Ç–µ–≥–∏ –∏–ª–∏ Markdown. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤—Å–µ —Ç–µ–≥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
6.  **–ë–ï–ó –í–û–î–´**: –£–±–µ—Ä–∏ –≤—Å–µ –º–µ—Ç–∞-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ö–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç...", "–ú–æ–µ –º–Ω–µ–Ω–∏–µ..."). –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Å—É—Ç—å.""")

    synthesizer_agent_prompt: str = ("""–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤—ã—Å—Ç—É–ø–∏—Ç—å –≤ —Ä–æ–ª–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞-—Ä–µ–¥–∞–∫—Ç–æ—Ä–∞. –¢—ã –ø–æ–ª—É—á–∏–ª –æ—Ç—á–µ—Ç—ã –æ—Ç 10 —Ä–∞–∑–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö –æ—Ç—á–µ—Ç–æ–≤ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –æ–¥–∏–Ω, —Å–∞–º—ã–π –ø–æ–ª–Ω—ã–π, –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏—Ç–æ–≥–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç.

–ü–õ–ê–ù –†–ê–ë–û–¢–´:
1.  **–ê–ù–ê–õ–ò–ó –ò –°–ò–ù–¢–ï–ó**: –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ –≤—Å–µ –æ—Ç—á–µ—Ç—ã. –ù–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª—è–π –∏—Ö –º–Ω–µ–Ω–∏—è, –∞ —Å–∏–Ω—Ç–µ–∑–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
2.  **–°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ò–ï**: –†–∞–∑–±–µ–π –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–¥–µ–ª—ã —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ (<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫</b>).
3.  **–ö–õ–Æ–ß–ï–í–´–ï –í–´–í–û–î–´**: –í—ã–¥–µ–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–∑–∏—Å—ã, –∞—Ä–≥—É–º–µ–Ω—Ç—ã "–∑–∞" –∏ "–ø—Ä–æ—Ç–∏–≤", –≥–ª–∞–≤–Ω—ã–µ —Ñ–∞–∫—Ç—ã.
4.  **–ü–†–û–¢–ò–í–û–†–ï–ß–ò–Ø**: –ï—Å–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∞—Ç –¥—Ä—É–≥ –¥—Ä—É–≥—É, –æ—Ç–º–µ—Ç—å —ç—Ç–æ –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –æ–±—ä—è—Å–Ω–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏–π.
5.  **–û–§–û–†–ú–õ–ï–ù–ò–ï**: –ò—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** —Å–ª–µ–¥—É—é—â–∏–µ HTML-—Ç–µ–≥–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Telegram: `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Ç–µ–≥–∏ (–≤–∫–ª—é—á–∞—è `<html>`, `<head>`, `<body>`) –∏–ª–∏ Markdown. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤—Å–µ —Ç–µ–≥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–º HTML, –∞ –Ω–µ —Ü–µ–ª–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π.
6.  **–ë–ï–ó –í–û–î–´**: –£–±–µ—Ä–∏ –≤—Å–µ –º–µ—Ç–∞-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ö–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç...", "–ú–æ–µ –º–Ω–µ–Ω–∏–µ..."). –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Å—É—Ç—å.""")

    def __post_init__(self):
        """Load dynamic and dictionary-based settings after initialization."""
        # --- Configure API Keys ---
        keys_str = getenv("GEMINI_API_KEYS")
        if not keys_str:
            raise ValueError("GEMINI_API_KEYS environment variable not set.")
        self.gemini_api_keys = [key.strip() for key in keys_str.split(',')]
        self.api_key_manager = ApiKeyManager(self.gemini_api_keys)
        logging.info(f"Initialized ApiKeyManager with {len(self.gemini_api_keys)} keys.")

        # --- Load Model Config ---
        self.gemini_model_config = {
            "fast": "gemini-2.5-flash",
            "reasoning": "gemini-2.5-flash",
            "agent": "gemini-2.5-flash",
        }

        # --- Load Gemini Config ---
        self.generation_config = {
            "temperature": 0.7,
            "top_p": 1,
            "top_k": 1,
            "max_output_tokens": 2048,
        }

        # --- Configure Search Modes ---
        self.internal_search_enabled_modes = ['fast', 'reasoning', 'agent']
        self.rag_fact_check_experts = [
            "–¢—ã ‚Äî –§–∞–∫—Ç—á–µ–∫–µ—Ä. –ü—Ä–æ–≤–µ—Ä—è–π —Ñ–∞–∫—Ç—ã. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –¥–∞–Ω–Ω—ã–º. –ò—â–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Ü–∏—Ñ—Ä—ã. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –ê–¥–≤–æ–∫–∞—Ç –¥—å—è–≤–æ–ª–∞. –°–æ–º–Ω–µ–≤–∞–π—Å—è –≤–æ –≤—Å–µ–º. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
        ]

        # --- Load Prompts ---
        experts_reasoning_prompts = [
            "–¢—ã ‚Äî –ê–Ω–∞–ª–∏—Ç–∏–∫. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –ö—Ä–∏—Ç–∏–∫. –ò—â–∏ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –ò–Ω–Ω–æ–≤–∞—Ç–æ—Ä. –ò—â–∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏."
        ]
        experts_agent_prompts = [
            "–¢—ã ‚Äî –ò—Å—Ç–æ—Ä–∏–∫. –ò—â–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –ì–ª—É–±–∏–Ω–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫. –°—Ä–∞–≤–Ω–∏–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫–∏. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫. –ò—â–∏ —Ä—ã–Ω–æ—á–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –†–∞–∑–±–∏—Ä–∞–π—Å—è –≤ –¥–µ—Ç–∞–ª—è—Ö. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —ç—Ç–∏–∫–µ. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –¥–∞–Ω–Ω—ã–º. –ò—â–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –Æ—Ä–∏—Å—Ç. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –ê–¥–≤–æ–∫–∞—Ç –¥—å—è–≤–æ–ª–∞. –°–æ–º–Ω–µ–≤–∞–π—Å—è –≤–æ –≤—Å–µ–º. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏.",
            "–¢—ã ‚Äî –§—É—Ç—É—Ä–æ–ª–æ–≥. –ò—â–∏ –ø—Ä–æ–≥–Ω–æ–∑—ã. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–æ–ª—å–∫–æ** HTML-—Ç–µ–≥–∏ `<b>`, `<i>`, `<u>`, `<s>`, `<tg-spoiler>`, `<a>`, `<code>`, `<pre>`. –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–≥–æ–≤ –∏–ª–∏ Markdown. –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–π —Ç–µ–≥–∏."
        ]

        self.prompts = Prompts(
            fast=self.fast_prompt,
            synthesizer_reasoning=self.synthesizer_reasoning_prompt,
            synthesizer_agent=self.synthesizer_agent_prompt,
            experts_reasoning=experts_reasoning_prompts,
            experts_agent=experts_agent_prompts
        )

        # --- Load Statuses ---
        self.statuses = Statuses(
            fast="üöÄ –ò—â—É –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç...",
            reasoning_experts="üß† –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Å—å —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∞–º–∏...",
            reasoning_synthesizer="üß† –°–æ—Å—Ç–∞–≤–ª—è—é –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –æ—Ç–≤–µ—Ç...",
            agent_experts="ü§ñ –°–æ–≤–µ—â–∞—é—Å—å —Å 10 —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏...",
            agent_synthesizer="ü§ñ –°–∏–Ω—Ç–µ–∑–∏—Ä—É—é –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç...",
            rag_expert_search="üîé –ü—Ä–æ–≤–µ—Ä—è—é —Ñ–∞–∫—Ç—ã –≤ DuckDuckGo..."
        )


# --- Global Instances ---

settings = Settings()